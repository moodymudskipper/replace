% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace.R
\name{replace_in_files}
\alias{replace_in_files}
\title{Replace occurence of variable in files}
\usage{
replace_in_files(target, replacement, paths = "R", what = c("var", "fun"))
}
\arguments{
\item{target}{a string}

\item{replacement}{a string}

\item{paths}{a vector of paths or folders, if the latter all R scripts (".R", ".r") are considered}

\item{what}{one or several of "var", "fun", "arg", "formal", "package". They are
mapped to token types found in the output of \code{getParseData()}. See details.
\itemize{
\item "var" : standard variable names \code{target}
\item "fun" : function calls \code{target()} (if called through lapply etc a function will be matched with "var", not "fun")
\item "arg" : Function argument name \code{foo(target = bar)}
\item "formal" : a function's formal definition \code{function(target) {}} or \verb{function(target = ) \{\}}
\item "package" : \code{target::foo} or \code{target:::foo}
}}
}
\description{
Use to replace a variable name in a collection of files, keeping control on the type of
replacement.
}
